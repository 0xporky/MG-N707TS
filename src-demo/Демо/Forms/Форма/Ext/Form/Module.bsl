
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	СтруктураПодключения = ngn707ts_АвторизацияСервер.СтруктураПараметровПодключения();
	СтруктураПодключения.Сервер  = АдресКассовогоАппарата;
	СтруктураПодключения.Логин   = Логин;
	СтруктураПодключения.Пароль  = Пароль;
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресКассовогоАппаратаПриИзменении(Элемент)
	СтруктураПодключения.Сервер = АдресКассовогоАппарата;
КонецПроцедуры

&НаКлиенте
Процедура ЛогинПриИзменении(Элемент)
	СтруктураПодключения.Логин = Логин;
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	СтруктураПодключения.Пароль = Пароль;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатураЕстьСкидкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.ЕстьСкидка = Истина Тогда
		ТекущиеДанные.СуммаСкидки 	= 0;
		ТекущиеДанные.ПроцентСкидки = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Продажа(Команда)
	ПродажаСервер();
КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваров(Команда)
	ВозвратТоваровСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЧековуюЛенту(Команда)
	ПрочитатьЧековуюЛентуНаСервере();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СтатусКассовогоАппарата(Команда)
	СтатусКассовогоАппаратаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	ОткрытьСменуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СлужебноеВнесение(Команда)
	СлужебноеВнесениеСервере();
КонецПроцедуры

&НаКлиенте
Процедура СлужебноеИзъятие(Команда)
	СлужебноеИзъятиеСервере();
КонецПроцедуры

&НаКлиенте
Процедура Печать_X_Отчета(Команда)
	Печать_X_ОтчетаНаСервере();
КонецПроцедуры 

&НаКлиенте
Процедура Печать_Z_Отчета(Команда)
	Печать_Z_ОтчетаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНалогов(Команда)
	ТаблицаНалоговНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВидовОплат(Команда)
	ТаблицаВидовОплатНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Подключение(Команда)
	ПроверитьСоединениеСКассовымАппаратом();
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СтатусКассовогоАппаратаНаСервере()
		
	Ответ = ngn707ts_Операции.ЗапросСтатусКассовогоАппарата(СтруктураПодключения);
	
	Для Каждого ОдинОтвет Из Ответ Цикл
		СообщитьПользователю(ОдинОтвет.Ключ + ":" + ОдинОтвет.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьСменуНаСервере()
	Если ngn707ts_Операции.ОткрытьКассовуюСмену(СтруктураПодключения) Тогда
		СообщитьПользователю(НСтр("ru='Кассовая смена успешно открыта.'"));
	Иначе
		СообщитьПользователю(НСтр("ru='Не удалось открыть кассовую смену.'"));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СлужебноеВнесениеСервере()
	
	ОтветКА = ngn707ts_Операции.СлужебноеВнесение(СтруктураПодключения, СуммаСлужебногоВнесения, НСтр("ru='Тестовый пользователь'"));
	
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось получить ответ от кассового аппарата.'"));
		Возврат;
	КонецЕсли;
		
	СообщитьПользователю(НСтр("ru='Служебное внесение выполнено.'"));
	
КонецПроцедуры

&НаСервере
Процедура СлужебноеИзъятиеСервере()
	
	ОтветКА = ngn707ts_Операции.СлужебнаяВыдача(СтруктураПодключения, СуммаСлужебногоИзъятия, НСтр("ru='Тестовый пользователь'"));
	
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось получить ответ от кассового аппарата.'"));
		Возврат;
	КонецЕсли;
		
	СообщитьПользователю(НСтр("ru='Служебное изъятие выполнено.'"));
	
КонецПроцедуры

&НаСервере
Процедура ПродажаСервер()
	
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОплаты = ngn707ts_Операции.СтруктураОплаты();
	СтруктураОплаты.СуммаОплаты 				= СуммаОплачено;
	СтруктураОплаты.НомерСтрокиНастройкиОплаты 	= ТипОплаты;
	СтруктураОплаты.НомерТранзакции 			= НомерТранзакции;
	СтруктураОплаты.НомерБанковскойКарты 		= НомерКарты;
	
	ОтветКА = ngn707ts_Операции.ПробитьФискальныйЧек(СтруктураПодключения, 
				ТаблицаНоменклатуры.Выгрузить(), 
				СтруктураОплаты, 
				НСтр("ru='Тестовый пользователь'"), 
				Ложь);
		
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось выполнить возврат.'"));
		СообщитьПользователю(ОтветКА.ПолучитьТелоКакСтроку());
		Возврат;
	КонецЕсли;
	
	СообщитьПользователю(НСтр("ru='Продажа выполнен.'"));
	
КонецПроцедуры

&НаСервере
Процедура ВозвратТоваровСервер()
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОплаты = ngn707ts_Операции.СтруктураОплаты();
	СтруктураОплаты.СуммаОплаты 				= СуммаОплачено;
	СтруктураОплаты.НомерСтрокиНастройкиОплаты 	= ТипОплаты;
	СтруктураОплаты.НомерТранзакции 			= НомерТранзакции;
	СтруктураОплаты.НомерБанковскойКарты 		= НомерКарты;
	
	ОтветКА = ngn707ts_Операции.ПробитьФискальныйЧек(СтруктураПодключения, 
				ТаблицаНоменклатуры.Выгрузить(),
				СтруктураОплаты, 
				НСтр("ru='Тестовый пользователь'"), 
				Истина);
	
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось выполнить возврат.'"));
		СообщитьПользователю(ОтветКА.ПолучитьТелоКакСтроку());
		Возврат;
	КонецЕсли;
	
	СообщитьПользователю(НСтр("ru='Возврат выполнена.'"));
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЧековуюЛентуНаСервере()
	СообщитьПользователю(ngn707ts_Операции.ПрочитатьЧековуюЛенту(СтруктураПодключения));
КонецПроцедуры

&НаСервере
Процедура Печать_X_ОтчетаНаСервере()
	ngn707ts_Операции.Печать_X_Отчет(СтруктураПодключения);
КонецПроцедуры

&НаСервере
Процедура Печать_Z_ОтчетаНаСервере()
	ngn707ts_Операции.Печать_Z_Отчет(СтруктураПодключения);
КонецПроцедуры



&НаСервере
Процедура ТаблицаНалоговНаСервере()
	
	ТаблицаНалогов = ngn707ts_Операции.ТаблицаНалогов(СтруктураПодключения);
	ТекстСообщения = НСтр("ru='Таблица налогов.'") + Символы.ПС;
	
	Для Каждого СтрокаТаблицы Из ТаблицаНалогов Цикл
		Для Каждого КолонкаТаблицы Из ТаблицаНалогов.Колонки Цикл
			ТекстСообщения = ТекстСообщения + КолонкаТаблицы.Заголовок + ": " + СтрокаТаблицы[КолонкаТаблицы.Имя] + "   ";
		КонецЦикла;
		ТекстСообщения = ТекстСообщения + Символы.ПС;
	КонецЦикла;
	
	СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаВидовОплатНаСервере()
	
	ТаблицаВидовОплаты = ngn707ts_Операции.ТаблицаВидовОплаты(СтруктураПодключения);
	ТекстСообщения = НСтр("ru='Таблица видов оплаты.'") + Символы.ПС;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВидовОплаты Цикл
		Для Каждого КолонкаТаблицы Из ТаблицаВидовОплаты.Колонки Цикл
			ТекстСообщения = ТекстСообщения + КолонкаТаблицы.Заголовок + ": " + СтрокаТаблицы[КолонкаТаблицы.Имя] + "   ";
		КонецЦикла;
		ТекстСообщения = ТекстСообщения + Символы.ПС;
	КонецЦикла;
	
	СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры


&НаСервере
Процедура ПроверитьСоединениеСКассовымАппаратом()
	
	Попытка
		ОтветКА = ngn707ts_Операции.ЗапросСтатусКассовогоАппарата(СтруктураПодключения);
	Исключение
		СообщитьПользователю(НСтр("ru='Не удалось подключиться к аппарату.'"));
		Элементы.ГруппаСлужебныеОперации.Доступность 	= Ложь;
		Элементы.ГруппаБазовыеОперации.Доступность 		= Ложь;
		Элементы.ГруппаПродажи.Доступность				= Ложь;
		Возврат;
	КонецПопытки;
	
	Если ОтветКА = Неопределено Тогда
		СообщитьПользователю(НСтр("ru='Выполнена неверная операция к аппарату.'"));
		Элементы.ГруппаСлужебныеОперации.Доступность 	= Ложь;
		Элементы.ГруппаБазовыеОперации.Доступность 		= Ложь;
		Элементы.ГруппаПродажи.Доступность				= Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСлужебныеОперации.Доступность 	= Истина;
	Элементы.ГруппаБазовыеОперации.Доступность 		= Истина;
	Элементы.ГруппаПродажи.Доступность				= Истина;
	
	ТаблицаВидовОплаты = ngn707ts_Операции.ТаблицаВидовОплаты(СтруктураПодключения);
	СписокОплат = Элементы.ТипОплаты.СписокВыбора;
	СписокОплат.Очистить();
	Для Каждого СтрокаТаблицы Из ТаблицаВидовОплаты Цикл
		СписокОплат.Добавить(СтрокаТаблицы.НомерВидаОплаты, СтрокаТаблицы.НазваниеВидаОплаты);
	КонецЦикла;
	
	Если СписокОплат.Количество() > 0 Тогда
		ТипОплаты = СписокОплат[0].Значение;
	КонецЕсли;
	
	
	ТаблицаНалогов = ngn707ts_Операции.ТаблицаНалогов(СтруктураПодключения);
	СписокНалогов  = Элементы.ТаблицаНоменклатурыЗначениеНалоговойГруппы.СписокВыбора;
	СписокНалогов.Очистить();
	Для Каждого СтрокаТаблицы Из ТаблицаНалогов Цикл
		СписокНалогов.Добавить(СтрокаТаблицы.НомерНалога, СтрокаТаблицы.ПроцентНалога);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СообщитьПользователю(ТекстСообщения)
	Сообщение 		= Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти