
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	СтруктураПодключения = ngn707ts_АвторизацияСервер.ПолучитьСтруктуруПараметровПодключения();
	СтруктураПодключения.Сервер  = АдресКассовогоАппарата;
	СтруктураПодключения.Логин   = Логин;
	СтруктураПодключения.Пароль  = Пароль;
	
	ПроверитьСоединениеСКассовымАппаратом();
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресКассовогоАппаратаПриИзменении(Элемент)
	СтруктураПодключения.Сервер = АдресКассовогоАппарата;
	ПроверитьСоединениеСКассовымАппаратом();
КонецПроцедуры

&НаКлиенте
Процедура ЛогинПриИзменении(Элемент)
	СтруктураПодключения.Логин = Логин;
	ПроверитьСоединениеСКассовымАппаратом();
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	СтруктураПодключения.Пароль = Пароль;
	ПроверитьСоединениеСКассовымАппаратом();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатураЕстьСкидкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.ЕстьСкидка = Истина Тогда
		ТекущиеДанные.СуммаСкидки 	= 0;
		ТекущиеДанные.ПроцентСкидки = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Продажа(Команда)
	ПродажаСервер();
КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваров(Команда)
	ВозвратТоваровСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЧековуюЛенту(Команда)
	ПрочитаьтЧековуюЛенту();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СтатусКассовогоАппарата(Команда)
	СтатусКассовогоАппаратаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	ОткрытьСменуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СлужебноеВнесение(Команда)
	СлужебноеВнесениеСервере();
КонецПроцедуры

&НаКлиенте
Процедура СлужебноеИзъятие(Команда)
	СлужебноеИзъятиеСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТаблицуОшибок(Команда)
	ПолучитьТаблицуОшибокСервер();
КонецПроцедуры

&НаКлиенте
Процедура Печать_X_Отчета(Команда)
	Печать_X_ОтчетаНаСервере();
КонецПроцедуры 

&НаКлиенте
Процедура Печать_Z_Отчета(Команда)
	Печать_Z_ОтчетаНаСеврере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТаблицуНалогов(Команда)
	ПолучитьТаблицуНалоговНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТаблицуВидовОплат(Команда)
	ПолучитьТаблицуВидовОплатНаСервере();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СтатусКассовогоАппаратаНаСервере()
		
	Ответ = ngn707ts_Операции.ЗапросСтатусКассовогоАппарата(СтруктураПодключения);
	
	Для Каждого ОдинОтвет ИЗ Ответ Цикл
		Сообщить(ОдинОтвет.Ключ + ":" + ОдинОтвет.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьСменуНаСервере()
	Если ngn707ts_Операции.ОткрытьКассовуюСмену(СтруктураПодключения) Тогда
		Сообщить("Кассовая смена успешно открыта.");
	Иначе
		Сообщить("Не удалось открыть кассовую смену.");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СлужебноеВнесениеСервере()
	
	ОтветКА = ngn707ts_Операции.СлужебноеВнесение(СтруктураПодключения, СуммаСлужебногоВнесения, "Тестовый пользователь");
	
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось получить ответ от кассового апппарата.'"));
		Возврат;
	КонецЕсли;
		
	СообщитьПользователю(НСтр("ru='Служеное внесение выполнено.'"));
	
КонецПроцедуры

&НаСервере
Процедура СлужебноеИзъятиеСервере()
	
	ОтветКА = ngn707ts_Операции.СлужебнаяВыдача(СтруктураПодключения, СуммаСлужебногоИзъятия, "Тестовый пользователь");
	
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось получить ответ от кассового апппарата.'"));
		Возврат;
	КонецЕсли;
		
	СообщитьПользователю(НСтр("ru='Служеное изъятие выполнено.'"));
	
КонецПроцедуры

&НаСервере
Процедура ПродажаСервер()
	
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОплаты = ngn707ts_Операции.ПолучитьСтруктуруОплаты();
	СтруктураОплаты.СуммаОплаты 				= СуммаОплачено;
	СтруктураОплаты.НомерСтрокиНастройкиОплаты 	= ТипОплаты;
	СтруктураОплаты.НомерТранзакции 			= НомерТранзакции;
	СтруктураОплаты.НомерБанковскойКарты 		= НомерКарты;
	
	ОтветКА = ngn707ts_Операции.ПробитьФискальныйЧек(СтруктураПодключения, ТаблицаНоменклатуры.Выгрузить(), СтруктураОплаты, "Тестовый пользователь", Ложь);
		
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось выполнить возврат.'"));
		СообщитьПользователю(ОтветКА.ПолучитьТелоКакСтроку());
		Возврат;
	КонецЕсли;
	
	СообщитьПользователю(НСтр("ru='Продажа выполнен.'"));
	
КонецПроцедуры

&НаСервере
Процедура ВозвратТоваровСервер()
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОплаты = ngn707ts_Операции.ПолучитьСтруктуруОплаты();
	СтруктураОплаты.СуммаОплаты 				= СуммаОплачено;
	СтруктураОплаты.НомерСтрокиНастройкиОплаты 	= ТипОплаты;
	СтруктураОплаты.НомерТранзакции 			= НомерТранзакции;
	СтруктураОплаты.НомерБанковскойКарты 		= НомерКарты;
	
	ОтветКА = ngn707ts_Операции.ПробитьФискальныйЧек(СтруктураПодключения, ТаблицаНоменклатуры.Выгрузить(), СтруктураОплаты, "Тестовый пользователь", Истина);
	
	Если ОтветКА = Ложь Тогда
		СообщитьПользователю(НСтр("ru='Не удалось выполнить возврат.'"));
		СообщитьПользователю(ОтветКА.ПолучитьТелоКакСтроку());
		Возврат;
	КонецЕсли;
	
	СообщитьПользователю(НСтр("ru='Возврат выполнена.'"));
КонецПроцедуры

&НаСервере
Процедура ПрочитаьтЧековуюЛенту()
	СообщитьПользователю(ngn707ts_Операции.ПрочитатьЧековуюЛенту(СтруктураПодключения));
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуОшибокСервер()
	ТаблицаОшибок = ngn707ts_Операции.ПолучитьТаблицуОшибок(СтруктураПодключения);
	Если ТипЗнч(ТаблицаОшибок) = Тип("ТаблицаЗначений") Тогда
		Для Каждого СтрокаТаблицы ИЗ ТаблицаОшибок Цикл
			СообщитьПользователю(НСтр("ru='Код ошибки: '") + ТаблицаОшибок.КодОшибки + НСтр("ru=' Описание ошибки: '") + ТаблицаОшибок.ТекстОшибки_RU);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура Печать_X_ОтчетаНаСервере()
	ngn707ts_Операции.Печать_X_Отчет(СтруктураПодключения);
КонецПроцедуры

Процедура Печать_Z_ОтчетаНаСеврере()
	ngn707ts_Операции.Печать_Z_Отчет(СтруктураПодключения);
КонецПроцедуры



&НаСервере
Процедура ПолучитьТаблицуНалоговНаСервере()
	
	ТаблицаНалогов = ngn707ts_Операции.ПолучитьТаблицуНалогов(СтруктураПодключения);
	ТекстСообщения = "Таблица налогов." + Символы.ПС;
	
	Для Каждого СтрокаТаблицы Из ТаблицаНалогов Цикл
		Для Каждого КолонкаТаблицы ИЗ ТаблицаНалогов.Колонки Цикл
			ТекстСообщения = ТекстСообщения + КолонкаТаблицы.Заголовок + ": " + СтрокаТаблицы[КолонкаТаблицы.Имя] + "   ";
		КонецЦикла;
		ТекстСообщения = ТекстСообщения + Символы.ПС;
	КонецЦикла;
	
	СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуВидовОплатНаСервере()
	
	ТаблицаВидовОплаты = ngn707ts_Операции.ПолучитьТаблицуВидовОплаты(СтруктураПодключения);
	ТекстСообщения = "Таблица видов оплаты." + Символы.ПС;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВидовОплаты Цикл
		Для Каждого КолонкаТаблицы ИЗ ТаблицаВидовОплаты.Колонки Цикл
			ТекстСообщения = ТекстСообщения + КолонкаТаблицы.Заголовок + ": " + СтрокаТаблицы[КолонкаТаблицы.Имя] + "   ";
		КонецЦикла;
		ТекстСообщения = ТекстСообщения + Символы.ПС;
	КонецЦикла;
	
	СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры


&НаСервере
Процедура ПроверитьСоединениеСКассовымАппаратом()
	
	Попытка
		ОтветКА = ngn707ts_Операции.ЗапросСтатусКассовогоАппарата(СтруктураПодключения);
	Исключение
		СообщитьПользователю("Не удалось подключиться к аппарату.");
		Элементы.ГруппаСлужебныеОперации.Доступность 	= Ложь;
		Элементы.ГруппаБазовыеОперации.Доступность 		= Ложь;
		Элементы.ГруппаПродажы.Доступность				= Ложь;
		Возврат;
	КонецПопытки;
	
	Если ОтветКА = Неопределено Тогда
		СообщитьПользователю("Выполнена неверная операция к аппарату.");
		Элементы.ГруппаСлужебныеОперации.Доступность 	= Ложь;
		Элементы.ГруппаБазовыеОперации.Доступность 		= Ложь;
		Элементы.ГруппаПродажы.Доступность				= Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСлужебныеОперации.Доступность 	= Истина;
	Элементы.ГруппаБазовыеОперации.Доступность 		= Истина;
	Элементы.ГруппаПродажы.Доступность				= Истина;
	
	ТаблицаВидовОплаты = ngn707ts_Операции.ПолучитьТаблицуВидовОплаты(СтруктураПодключения);
	СписокОплат = Элементы.ТипОплаты.СписокВыбора;
	СписокОплат.Очистить();
	Для Каждого СтрокаТаблицы ИЗ ТаблицаВидовОплаты Цикл
		СписокОплат.Добавить(СтрокаТаблицы.НомерВидаОплаты, СтрокаТаблицы.НазваниеВидаОплаты);
	КонецЦикла;
	
	Если СписокОплат.Количество() > 0 Тогда
		ТипОплаты = СписокОплат[0].Значение;
	КонецЕсли;
	
	
	ТаблицаНалогов = ngn707ts_Операции.ПолучитьТаблицуНалогов(СтруктураПодключения);
	СписокНалогов  = Элементы.ТаблицаНоменклатурыЗначениеНалоговойГруппы.СписокВыбора;
	СписокНалогов.Очистить();
	Для Каждого СтрокаТаблицы ИЗ ТаблицаНалогов Цикл
		СписокНалогов.Добавить(СтрокаТаблицы.НомерНалога, СтрокаТаблицы.ПроцентНалога);
	КонецЦикла;
	
КонецПроцедуры




&НаСервере
Процедура СообщитьПользователю(ТекстСообщения)
	Сообщение 		= Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти